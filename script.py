import os
import django

os.environ['DJANGO_SETTINGS_MODULE'] = 'happy_shopaholic.settings'
django.setup()
import traceback

from telebot import TeleBot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

from core.models import *
import config

#  initialize settings
TOKEN = Bot.objects.get(pk=1).token
SIZE = config.SIZE
greetings = config.greetings

bot = TeleBot(TOKEN)


def start_markup():
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(
        InlineKeyboardButton("üöÄ –ù–∞—á–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞", callback_data="start"),
    )
    return markup


def request_markup(photo='', size='', amount=0, price='', free_order='', phone_number='', fio=''):
    if photo:
        _photo = '‚úÖ'
    else:
        _photo = ''
    if size:
        _size = '‚úÖ'
    else:
        _size = ''

    if amount:
        _amount = '‚úÖ'
    else:
        _amount = ''

    if price:
        _price = '‚úÖ'
    else:
        _price = ''

    if free_order:
        _free_order = '‚úÖ'
    else:
        _free_order = ''

    if phone_number:
        _phone_number = '‚úÖ'
    else:
        _phone_number = ''

    if fio:
        _fio = '‚úÖ'
    else:
        _fio = ''

    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(
        InlineKeyboardButton(f"{_fio} üë§ –ò–º—è (—Ç–æ –∂–µ —á—Ç–æ –≤ VK) ", callback_data="fio"),
        InlineKeyboardButton(f"{_phone_number} üì± –ù–æ–º–µ—Ä –¢–µ–ª–µ—Ñ–æ–Ω–∞ ", callback_data="phone_number"),
        InlineKeyboardButton(f"{_photo} üì∏ –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ ", callback_data="photo"),
        InlineKeyboardButton(f"{_size} üëï –†–∞–∑–º–µ—Ä {str(size).upper()}", callback_data="size"),
        InlineKeyboardButton(f"{_amount} üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ {amount}", callback_data="amount"),
        InlineKeyboardButton(f"{_price} üí≤ –¶–µ–Ω–∞ {price}", callback_data="price"),
        InlineKeyboardButton(f"{_free_order} üÜì    –ó–∞–∫–∞–∑ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ ", callback_data="free_order"),
        InlineKeyboardButton("–ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="finish"),
    )
    return markup


def confirm_markup():
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(
        InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ ", callback_data=f"confirm"),
        InlineKeyboardButton("–û—Ç–∫–∞–∑–∞—Ç—å—Å—è ‚ùå", callback_data=f"refuse"),
    )
    return markup


@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.type == 'private':
        #  –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è TG
        User.objects.create(
            user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name)
        bot.send_photo(message.chat.id,
                       photo=open(greetings, 'rb'),
                       caption='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ë–æ—Ç–∏–∫-–∫–æ—Ç–∏–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—Å! –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –≤ —Å–µ—Ä–≤–∏—Å–µ HappyShopaholic',
                       reply_markup=start_markup())


@bot.callback_query_handler(func=lambda call: True)
def callback_query_handlers(call):
    print(call.data)

    def delete_message(_id):
        try: bot.delete_message(call.message.chat.id, _id)
        except: print(traceback.format_exc())

    def clear_current_user(obj):
        obj.photo = None
        obj.size = None
        obj.amount = 0
        obj.price = None
        obj.free_order = None

    def create_user():
        User.objects.create(
            user_id=call.from_user.id,
            username=call.from_user.username,
            first_name=call.from_user.first_name,
            last_name=call.from_user.last_name)

    admin = AdminSettings.objects.all()

    current_user = User.objects.filter(user_id=call.from_user.id, is_ordered=False).last()
    # print(current_user)

    username = User.objects.filter(user_id=call.from_user.id).last().username
    if not username:
        username = ''
    else:
        username = '@' + username

    first_name = User.objects.filter(user_id=call.from_user.id).last().first_name
    if not first_name: first_name = ''

    last_name = User.objects.filter(user_id=call.from_user.id).last().last_name
    if not last_name: last_name = ''

    fio = User.objects.filter(user_id=call.from_user.id).last().fio
    if not fio: fio = ''

    phone_number = User.objects.filter(user_id=call.from_user.id).last().phone_number
    if not phone_number: phone_number = ''

    photo = User.objects.filter(user_id=call.from_user.id).last().photo

    size = User.objects.filter(user_id=call.from_user.id).last().size
    if not size: size = ''

    amount = User.objects.filter(user_id=call.from_user.id).last().amount
    if not amount: amount = ''

    price = User.objects.filter(user_id=call.from_user.id).last().price
    if not price: price = ''

    free_order = User.objects.filter(user_id=call.from_user.id).last().free_order
    if not free_order: free_order = ''

    if call.message.chat.type == 'private':
        if 'start' in call.data:
            delete_message(call.message.id)

            #  –û—á–∏—â–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-–∑–∞–∫–∞–∑
            try:
                clear_current_user(obj=current_user)
            except:
                create_user()

            bot.send_photo(call.message.chat.id,
                           photo=open(greetings, 'rb'),
                           caption='–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:',
                           reply_markup=request_markup())

        elif 'photo' in call.data:
            delete_message(call.message.id)

            def get_photo(message):
                if message.content_type == 'photo':
                    photo = message.photo[-1].file_id

                    #  –°–æ—Ö—Ä–∞–Ω—è–µ–º URL —Ñ–æ—Ç–æ –≤ –ë–î
                    current_user.photo = photo
                    current_user.save()

                    bot.send_message(call.message.chat.id, text='–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ ... ',
                                     reply_markup=request_markup(photo=photo, size=size, amount=amount, price=price,
                                                                 free_order=free_order, fio=fio,
                                                                 phone_number=phone_number))
                else:
                    bot.send_message(call.message.chat.id, text='–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ —Å–Ω–æ–≤–∞.',
                                     reply_markup=request_markup(size=size, amount=amount, price=price,
                                                                 free_order=free_order, fio=fio,
                                                                 phone_number=phone_number))

            msg = bot.send_message(call.message.chat.id, text='–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ (–º–æ–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–∑ –∫–∞–Ω–∞–ª–∞): ')
            bot.register_next_step_handler(msg, get_photo)

        elif 'size' in call.data:
            delete_message(call.message.id)

            def get_size(message):
                if str(message.text).upper().replace(',', '.') in SIZE:
                    size = message.text

                    #  –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –≤ –ë–î
                    current_user.size = size
                    current_user.save()

                    bot.send_message(call.message.chat.id, text='–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ ... ',
                                     reply_markup=request_markup(photo=photo, size=size, amount=amount, price=price,
                                                                 free_order=free_order, fio=fio,
                                                                 phone_number=phone_number))
                else:
                    bot.send_message(call.message.chat.id, text='–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω —Ä–∞–∑–º–µ—Ä',
                                     reply_markup=request_markup(photo=photo, amount=amount, price=price,
                                                                 free_order=free_order, fio=fio,
                                                                 phone_number=phone_number))

            msg = bot.send_message(call.message.chat.id,
                                   text='–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—ÄÔ∏è (–û–¥–µ–∂–¥–∞: XS, S, M, L, XL, XXL) (–û–±—É–≤—å: 4-16 US): ')
            bot.register_next_step_handler(msg, get_size)

        elif 'amount' in call.data:
            delete_message(call.message.id)

            def get_amount(message):
                try:
                    amount = int(message.text)

                    #  –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –≤ –ë–î
                    current_user.amount = amount
                    current_user.save()

                    bot.send_message(call.message.chat.id, text='–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ ... ',
                                     reply_markup=request_markup(photo=photo, size=size, amount=amount, price=price,
                                                                 free_order=free_order, fio=fio,
                                                                 phone_number=phone_number))
                except:
                    bot.send_message(call.message.chat.id, text='–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ. –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ...',
                                     reply_markup=request_markup(photo=photo, size=size, price=price,
                                                                 free_order=free_order, fio=fio,
                                                                 phone_number=phone_number))

            msg = bot.send_message(call.message.chat.id, text='–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞(—Ü–∏—Ñ—Ä–æ–π): ')
            bot.register_next_step_handler(msg, get_amount)

        elif 'price' in call.data:
            delete_message(call.message.id)

            def get_price(message):
                price = message.text

                #  –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É –≤ –ë–î
                current_user.price = price
                current_user.save()

                bot.send_message(call.message.chat.id, text='–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ ... ',
                                 reply_markup=request_markup(photo=photo, size=size, amount=amount, price=price,
                                                             free_order=free_order, fio=fio, phone_number=phone_number))

            msg = bot.send_message(call.message.chat.id, text='–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞: ')
            bot.register_next_step_handler(msg, get_price)

        elif 'fio' in call.data:
            delete_message(call.message.id)

            def get_fio(message):
                fio = message.text

                #  –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É –≤ –ë–î
                current_user.fio = fio
                current_user.save()

                bot.send_message(call.message.chat.id, text='–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ ... ',
                                 reply_markup=request_markup(photo=photo, size=size, amount=amount, price=price,
                                                             free_order=free_order, fio=fio, phone_number=phone_number))

            msg = bot.send_message(call.message.chat.id, text='–£–∫–∞–∂–∏—Ç–µ –§–ò–û: ')
            bot.register_next_step_handler(msg, get_fio)

        elif 'phone_number' in call.data:
            delete_message(call.message.id)

            def get_phone_number(message):
                phone_number = message.text

                #  –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É –≤ –ë–î
                current_user.phone_number = phone_number
                current_user.save()

                bot.send_message(call.message.chat.id, text='–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ ... ',
                                 reply_markup=request_markup(photo=photo, size=size, amount=amount, price=price,
                                                             free_order=free_order, fio=fio, phone_number=phone_number))

            msg = bot.send_message(call.message.chat.id, text='–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ')
            bot.register_next_step_handler(msg, get_phone_number)

        elif 'free_order' in call.data:
            delete_message(call.message.id)

            def get_free_order(message):
                free_order = message.text

                #  –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É –≤ –ë–î
                current_user.free_order = free_order
                current_user.save()

                bot.send_message(call.message.chat.id, text='–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ ... ',
                                 reply_markup=request_markup(photo=photo, size=size, amount=amount, price=price,
                                                             free_order=free_order, fio=fio, phone_number=phone_number))

            msg = bot.send_message(call.message.chat.id, text='–ú–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –≤—Å—ë, —á—Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ')
            bot.register_next_step_handler(msg, get_free_order)

        elif 'finish' in call.data:
            delete_message(call.message.id)
            text = f'*** –í–∞—à –∑–∞–∫–∞–∑ ***' \
                   f'\n–§–ò–û: {str(fio).capitalize()}' \
                   f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}' \
                   f'\n–†–∞–∑–º–µ—Ä: {size}' \
                   f'\n–ö–æ–ª-–≤–æ: {amount}' \
                   f'\n–¶–µ–Ω–∞: {price}' \
                   f'\n–°–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ: {free_order}' \
                   f'\n******************'
            if photo:
                bot.send_photo(call.message.chat.id,
                               photo=photo,
                               caption=text,
                               reply_markup=confirm_markup())
            else:
                bot.send_message(call.message.chat.id,
                                 text=text,
                                 reply_markup=confirm_markup())

        elif 'confirm' in call.data:
            delete_message(call.message.id)
            if current_user.size and current_user.amount and current_user.fio and current_user.phone_number:
                text = f'*** –ù–æ–≤—ã–π –ó–∞–∫–∞–∑ ***' \
                       f'\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username} {first_name} {last_name}' \
                       f'\n–§–ò–û: {str(fio).capitalize()}' \
                       f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}' \
                       f'\n–†–∞–∑–º–µ—Ä: {size}\n–ö–æ–ª-–≤–æ: {amount}' \
                       f'\n–¶–µ–Ω–∞: {price}' \
                       f'\n–°–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ: {free_order}' \
                       f'\n******************'
                for i in admin:
                    if photo:
                        bot.send_photo(i.tg_admin_id, photo=photo, caption=text)
                    else:
                        bot.send_message(i.tg_admin_id, text=text)

                #  –ó–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏–Ω—è—Ç
                current_user.is_ordered = True
                current_user.save()

                bot.send_message(call.message.chat.id, text='–°–ø–∞—Å–∏–±–æ, –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏!',
                                 reply_markup=start_markup())
            else:
                bot.send_message(call.message.chat.id,
                                 text='–ó–∞–ø–æ–ª–Ω–µ–Ω—ã –Ω–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è. –ü—Ä–æ—Å—å–±–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø—É–Ω–∫—Ç—ã',
                                 reply_markup=request_markup(photo=photo, size=size, amount=amount, price=price,
                                                             free_order=free_order, fio=fio, phone_number=phone_number))

        elif 'refuse' in call.data:
            delete_message(call.message.id)

            #  –û—á–∏—â–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-–∑–∞–∫–∞–∑
            try: current_user.delete()
            except: print(traceback.format_exc())

            bot.send_message(call.message.chat.id, text='–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∏–∑–∏—Ç!', reply_markup=start_markup())


bot.infinity_polling(skip_pending=False)
